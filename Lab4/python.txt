Python 3.6.2 (v3.6.2:5fd33b5, Jul  8 2017, 04:57:36) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> x=1
>>> type(x)
<class 'int'>
>>> x=1.0
>>> type(x)
<class 'float'>
>>> b1=true
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'true' is not defined
>>> b1=True
>>> b2=True
>>> type(b1)
<class 'bool'>
>>> x=1.0-1.0j
>>> type(x)
<class 'complex'>
>>> print(x)
(1-1j)
>>> print(x.real,x.image)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'complex' object has no attribute 'image'
>>> print(x.real,x.imag)
1.0 -1.0
>>> import types
>>> print(dir(types))
['AsyncGeneratorType', 'BuiltinFunctionType', 'BuiltinMethodType', 'CodeType', 'CoroutineType', 'DynamicClassAttribute', 'FrameType', 'FunctionType', 'GeneratorType', 'GetSetDescriptorType', 'LambdaType', 'MappingProxyType', 'MemberDescriptorType', 'MethodType', 'ModuleType', 'SimpleNamespace', 'TracebackType', '_GeneratorWrapper', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '_ag', '_calculate_meta', '_collections_abc', '_functools', 'coroutine', 'new_class', 'prepare_class']
>>> x=1.0
>>> type(x) is float
True
>>> type(x) is int
False
>>> isinstance(x,float)
True
>>> print(x,type(x))
1.0 <class 'float'>
>>> 1+2,1-2,1*2,1/2
(3, -1, 2, 0.5)
>>> 3.0//2.0
1.0
>>> 2**2
4
>>> true and false
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'true' is not defined
>>> True and False
False
>>> not False
True
>>> True or Flase
True
>>> 2>2,2<2
(False, False)
>>> 2=2,3=3
  File "<stdin>", line 1
SyntaxError: can't assign to literal
>>> 2<3,3>2
(True, True)
>>> [1,2]==[1,2]
True
>>> |1 =|2 = [1,2]
  File "<stdin>", line 1
    |1 =|2 = [1,2]
    ^
SyntaxError: invalid syntax
>>> |1 =|2 = [1,2]
  File "<stdin>", line 1
    |1 =|2 = [1,2]
    ^
SyntaxError: invalid syntax
>>> name= raw_input("what is your name?  ")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'raw_input' is not defined
>>> name=raw_input("what is your name?  ")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'raw_input' is not defined
>>> name = raw_input("what is your name?  ")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'raw_input' is not defined
>>> name = input("what is your name?  ")
what is your name?  asad
>>> age = input("enter your age:  ")
enter your age:  34
>>> type (age)
<class 'str'>
>>> age = input("enter your age:  ")
enter your age:  35
>>> type(age)
<class 'str'>
>>> age = int(age)
>>> type(age)
<class 'int'>
>>> if 9>5
  File "<stdin>", line 1
    if 9>5
         ^
SyntaxError: invalid syntax
>>> if 9>5:
... print "yes"
  File "<stdin>", line 2
    print "yes"
        ^
IndentationError: Missing parentheses in call to 'print'
>>> print "yes"