Python 3.6.3 (v3.6.3:2c5fed8, Oct  3 2017, 17:26:49) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> In[19]:
  File "<stdin>", line 1
    In[19]:
          ^
SyntaxError: invalid syntax
>>> x=1
>>> type(x)
<class 'int'>
>>> x=1.0
>>> type(x)
<class 'float'>
>>> b1=True
>>> b2=False
>>> type(b1)
<class 'bool'>
>>> x-1.0-1.0j
-1j
>>> x=1.0-1.0j
>>> type(x)
<class 'complex'>
>>> print(x)
(1-1j)
>>> print(x.real,x.imag)
1.0 -1.0
>>> import types
>>> print(dir(bool))
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
>>> print(dir(types))
['AsyncGeneratorType', 'BuiltinFunctionType', 'BuiltinMethodType', 'CodeType', 'CoroutineType', 'DynamicClassAttribute', 'FrameType', 'FunctionType', 'GeneratorType', 'GetSetDescriptorType', 'LambdaType', 'MappingProxyType', 'MemberDescriptorType', 'MethodType', 'ModuleType', 'SimpleNamespace', 'TracebackType', '_GeneratorWrapper', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '_ag', '_calculate_meta', '_collections_abc', '_functools', 'coroutine', 'new_class', 'prepare_class']
>>> x=1.0
>>> type(x)is float
True
>>> isinstance(x,float)
True
>>> x=1.0
>>> x=1.5
>>> print(x,type(x))
1.5 <class 'float'>
>>> x=int(x)
>>> print(x,type(x))
1 <class 'int'>
>>> z=complex(x)
>>> print(z,type(z))
(1+0j) <class 'complex'>
>>> x=float(z)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can't convert complex to float
>>> y=bool(z.real)
>>> print(z.real,"->",y,type(y))
1.0 -> True <class 'bool'>
>>> y=bool(z.imag)
>>> print(z.imag,"->",y,type(y))
0.0 -> False <class 'bool'>
>>> 1+2,1-2,1*2,1/2
(3, -1, 2, 0.5)
>>> 1.0+2.0,1.0-2.0,1.0*2.0,1.0/2.0
(3.0, -1.0, 2.0, 0.5)
>>> 3.0/2.0
1.5
>>> 2**2
4
>>> 1+2,1-2,1*2,1//2
(3, -1, 2, 0)
>>> 3.0//2.0
1.0
>>> True and False
False
>>> not False
True
>>> True or False
True
>>> 2>1,2<1
(True, False)
>>> 2 >= 2, 2 <= 2
(True, True)
>>> [1,2] == [1,2]
True
>>> l1 = l2 = [1,2]
>>> l1 is l2
True
>>> name = raw_input("What is your name? ")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'raw_input' is not defined
>>> name = input("What is your name? ")
What is your name? Sajjad
>>> city = input("What city do you live in? ")
What city do you live in? Multan
>>> state = input("What state is that in? ")
What state is that in? Pakistan
>>> print "Hello there! It is so great to meet you,"
  File "<stdin>", line 1
    print "Hello there! It is so great to meet you,"
                                                   ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("Hello there! It is so great to meet you,")?
>>> print( "Hello there! It is so great to meet you,")
Hello there! It is so great to meet you,
>>> print (name)
Sajjad
>>> print ("From")
From
>>> print (city)
Multan
>>> print(state)
Pakistan
>>> print(name,"from",city,state)
Sajjad from Multan Pakistan
>>> name=input("Enter your name")
Enter your name Sajjad
>>> age=input("Enter your age")
Enter your age 19
>>> age=2017-age+100
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for -: 'int' and 'str'
>>> year=2017-age+100
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for -: 'int' and 'str'
>>> int(input)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: int() argument must be a string, a bytes-like object or a number, not 'builtin_function_or_method'
>>> name=input
>>> name=input("Enter your name")
Enter your nameSajjad
>>> age=int(input("Enter your age")
... 19
  File "<stdin>", line 2
    19
     ^
SyntaxError: invalid syntax
>>> age=int(input("Enter your age"))
Enter your age19
>>> year = (2017-age)+100
>>> print(name "your age is",age,"after",year,"you will become 100 year")
  File "<stdin>", line 1
    print(name "your age is",age,"after",year,"you will become 100 year")
                           ^
SyntaxError: invalid syntax
>>> print(name, "your age is",age,"after",year,"you will become 100 year")
Sajjad your age is 19 after 2098 you will become 100 year
>>> print(name, "your age is",age,"after",year,"you will become 100 year old")
Sajjad your age is 19 after 2098 you will become 100 year old
>>>
