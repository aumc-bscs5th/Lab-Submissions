Python 3.6.3 (v3.6.3:2c5fed8, Oct  3 2017, 17:26:49) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> x=1
>>> type(x)
<class 'int'>
>>> x=1.0
>>> type(x)
<class 'float'>
>>> b1=true
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'true' is not defined
>>> b1=True
>>> b2=False
>>> type(b1)
<class 'bool'>
>>> x=1.0-1.0j
>>> type(x)
<class 'complex'>
>>> print (x)
(1-1j)
>>> print (x.real,x.imag)
1.0 -1.0
>>> import types
>>> print(dir(types))
['AsyncGeneratorType', 'BuiltinFunctionType', 'BuiltinMethodType', 'CodeType', 'CoroutineType', 'DynamicClassAttribute', 'FrameType', 'FunctionType', 'GeneratorType', 'GetSetDescriptorType', 'LambdaType', 'MappingProxyType', 'MemberDescriptorType', 'MethodType', 'ModuleType', 'SimpleNamespace', 'TracebackType', '_GeneratorWrapper', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '_ag', '_calculate_meta', '_collections_abc', '_functools', 'coroutine', 'new_class', 'prepare_class']
>>> x=1.0
>>> type(x) is float
True
>>> type(x) is int
False
>>> isinstance(x,float)
True
>>> x=1.5
>>> print(x,type(x))
1.5 <class 'float'>
>>> x=int(x)
>>> print(x,type(x))
1 <class 'int'>
>>> z=complex(x)
>>> print(z,type(z))
(1+0j) <class 'complex'>
>>> z=float(z)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can't convert complex to float
>>> x=float(z)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can't convert complex to float
>>> y=bool(z.real)
>>> print(z.ral,"->",y,type(y))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'complex' object has no attribute 'ral'
>>> print(z.real,"->",y,type(y))
1.0 -> True <class 'bool'>
>>> y=bool(z.image)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'complex' object has no attribute 'image'
>>> y=bool(z.imag)
>>> print(z.imag)
0.0
>>> print (z.image,"->",y,type(y))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'complex' object has no attribute 'image'
>>> print (z.imag,"->",y,type(y)))
  File "<stdin>", line 1
    print (z.imag,"->",y,type(y)))
                                 ^
SyntaxError: invalid syntax
>>> print (z.imag,"->",y,type(y))
0.0 -> False <class 'bool'>
>>> 1+2,1-2,1*2,1/2
(3, -1, 2, 0.5)
>>> 1.0+2.0,1.0-2.0,1.0*2.0,1.0/2.0
(3.0, -1.0, 2.0, 0.5)
>>> 3.0//2.0
1.0
>>> 3.0//2.0
1.0
>>> 2**2
4
>>> True and False
False
>>> not False
True
>>> True
True
>>> True or False
True
>>> 2>1,2<1
(True, False)
>>> 2>2,2<2
(False, False)
>>> 2>=2,2<=2
(True, True)
>>> [1,2]==[1,2]
True
>>> |1=|2=[1,2]
  File "<stdin>", line 1
    |1=|2=[1,2]
    ^
SyntaxError: invalid syntax
>>> !1=!2=[1,2]
  File "<stdin>", line 1
    !1=!2=[1,2]
    ^
SyntaxError: invalid syntax
>>> l1=l2=[1,2]
>>> l1 is l2
True
>>> name=raw_input("what is your name?")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'raw_input' is not defined
>>> name=input("what is your name?")
what is your name?Sohal Asghar
>>> city=input("what is your city?")
what is your city?Multan
>>> state=input("ehta state is that?")
ehta state is that?bhakkar
>>> print name
  File "<stdin>", line 1
    print name
             ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(name)?
>>> print (name)
Sohal Asghar
>>> print (city)
Multan
>>> print(state)
bhakkar
>>> print (name),"from",(city,state)
Sohal Asghar
(None, 'from', ('Multan', 'bhakkar'))
>>> print (name),"from",(city),(state)
Sohal Asghar
(None, 'from', 'Multan', 'bhakkar')
>>> name=input("what is your name?")
what is your name?sohail asghar
>>> print (name),"from",(city),(state)
sohail asghar
(None, 'from', 'Multan', 'bhakkar')
>>> print(name, "from", city, state)
sohail asghar from Multan bhakkar
>>> age =int(input("pardon my rudeness, but how old are you?"))
pardon my rudeness, but how old are you?19
>>> print ("wow! you look like you could be", int (age-(0.15*age)),"!!"
...
...
KeyboardInterrupt
>>> print ("wow! you look like you could be", int(age-(0.15*age)),"!!"
...
KeyboardInterrupt
>>> print ("wow! you look like you could be"), int(age-(0.15*age),"!!"
... print ("wow! you look like you could be"), int(age-(0.15*age)
  File "<stdin>", line 2
    print ("wow! you look like you could be"), int(age-(0.15*age)
        ^
SyntaxError: invalid syntax
>>> print ("wow! you look like you could be", int(age-(0.15*age))
...
...
...
KeyboardInterrupt
>>> age =int(input("pardon my rudeness, but how old are you?"))
pardon my rudeness, but how old are you?19
>>> print ("wow! you look like you could be", int(age-(0.15*age),"!!")
...
KeyboardInterrupt
>>> print ("wow! you look like you could be", int(age-(0.15*age)),"!!")
wow! you look like you could be 16 !!
>>> if 9>5
  File "<stdin>", line 1
    if 9>5
         ^
SyntaxError: invalid syntax
>>> if 9>5:
...     print ("yes 5 is greater than 2")
... if 9!=5:
  File "<stdin>", line 3
    if 9!=5:
     ^
SyntaxError: invalid syntax
>>> if 9>5:
...     print ("yes 5 is greater than 2")
... if 9!=5:
  File "<stdin>", line 3
    if 9!=5:
     ^
SyntaxError: invalid syntax
>>> if 9>5:
...     print ("yes 5 is greater than 2")
...     if 9!=5:
...             print ("9 not equal to 5")
...
yes 5 is greater than 2
9 not equal to 5
>>> if 9>5:
...     print ("yes 5 is greater than 2")
... else:
...     print ("9 not equal to 5")
...
yes 5 is greater than 2
>>> if not (10==4) and 9>5
  File "<stdin>", line 1
    if not (10==4) and 9>5
                         ^
SyntaxError: invalid syntax
>>> if not (10==4) and 9>5:
...     print("yay basic math competency achieved")
... else:
...     print":)"
  File "<stdin>", line 4
    print":)"
            ^
SyntaxError: invalid syntax
>>>     print")"
  File "<stdin>", line 1
    print")"
    ^
IndentationError: unexpected indent
>>> if not (10==4) and 9>5:
...     print ("9 not equal to 5")
... else:
...     print")"
  File "<stdin>", line 4
    print")"
           ^
SyntaxError: invalid syntax
>>> if not (10==4) and 9>5:
...     print ("9 not equal to 5")
... else:
...     print":("
  File "<stdin>", line 4
    print":("
            ^
SyntaxError: invalid syntax
>>> lightcolour=input("what is color of light")
what is color of lightRED
>>> lightcolour=lightcolour.lower()
>>> print (lightcolour)
red
>>> if lightcolour=="red"
  File "<stdin>", line 1
    if lightcolour=="red"
                        ^
SyntaxError: invalid syntax
>>> if lightcolour=="red":
...     print ("stop")
... elif lightcolour=="yellow":
...     print ("slow")
... elif lightcolour=="green":
...     print ("runn")
... else:
...     print("what country you are in??")
...
stop
>>> name=input("what is your name?")
what is your name?Sohail Asghar
>>> age=input("What is your age?")
What is your age?19
>>> age=int(age)
>>> print (age)
19
>>> year=2017-19
>>> print(year)
1998
>>> print(name,"you will be 100 in ",int(100+year))
Sohail Asghar you will be 100 in  2098
>>> year=2017-age
>>> print(year)
1998
>>> print(name,"you will be 100 year old in ",int(100+year))
Sohail Asghar you will be 100 year old in  2098
>>>